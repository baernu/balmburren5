apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: backend


    spec:


#      initContainers:
#        - name: wait-for-mysql
#          image: busybox
#          command: [ 'sh', '-c', 'until nc -z mysqldb 3307; do echo waiting for mysql; sleep 10; done;' ]

#        - name: init-cont
#          image: busybox:1.31
#          command: [ 'sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mysql 3307; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";' ]

      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MYSQLDB_ROOT_PASSWORD
                  name: env
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: MYSQLDB_DATABASE
                  name: env
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  key: MYSQLDB_USER
                  name: env
#            - name: MYSQL_HOST
#              value: mysql.default.svc.cluster.local
#            - name: MYSQL_PASSWORD
#              value: secret
            - name: MYSQL_PORT
              value: "3307"
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://pod-mysql:3307/balmburren_db?serverTimezone=UTC&allowPublicKeyRetrieval=true
#            - name: MYSQL_USER
#              value: root
#            - name: MYSQL_DATABASE
#              value: balmburren_db


          image: baernu/balmburren_backend:v1.0.0
          name: backend
          ports:
            - containerPort: 8080
              protocol: TCP


      restartPolicy: Always
