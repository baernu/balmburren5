version: '3'


services:
  mysqldb:
    image: mysql:5.7
    container_name: mysql-5.7
    restart: always                       # always restart
    environment:
      - MYSQL_DATABASE=balmburren_db
      - MYSQL_ROOT_PASSWORD=secret
#      MYSQL_DATABASE: 'balmburren_db'              # name of database
      - MYSQL_ROOT_USER=root                # sample is the name of user
#      MYSQL_PASSWORD: 'secret'          # password for sample user
#      MYSQL_ROOT_PASSWORD: 'secret'     # password for root user
    ports:
      - '3307:3306'                       # host port 3306 is mapper to docker port 3306
    expose:
      - '3307'
    volumes:
      - db:/var/lib/mysql
    networks:
      - springboot-mysql-network
#    healthcheck:
#        test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
#        retries: 10
#        interval: 3s
#        timeout: 30s

  backend:
    #image: openjdk:22
    container_name: balmburren_backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8081:8080
    expose:
      - '8081'
    depends_on:
      - mysqldb
    environment:
      SPRING_APPLICATION_JSON: '{
              "spring.datasource.url"  : "jdbc:mysql://mysqldb:3307/balmburren_db?useSSL=false",
              "spring.datasource.username" : "root",
              "spring.datasource.password" : "secret",
              "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
              "spring.jpa.hibernate.ddl-auto" : "update"
            }'
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3307/balmburren_db?autoReconnect=true&useSSL=false
#      - SPRING_DATASOURCE_USERNAME=root
#      - SPRING_DATASOURCE_PASSWORD=secret
    # "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
    networks:
      - springboot-mysql-network


  angular:
    #image: nginx:alpine
    container_name: balmburren_frontend
    build:
      context: ./frontend/src/main/angularclient
      dockerfile: Dockerfile
    ports:
      - 4201:4200
    expose:
      - '4201'
    networks:
      - springboot-mysql-network

volumes:
  db:
networks:
  springboot-mysql-network:
    name: springboot-mysql-network



